diff --git a/examples/skewfit/sawyer_door.py b/examples/skewfit/sawyer_door.py
index 823120b..d3d40f8 100644
--- a/examples/skewfit/sawyer_door.py
+++ b/examples/skewfit/sawyer_door.py
@@ -2,7 +2,7 @@ import os.path as osp
 import multiworld.envs.mujoco as mwmj
 import rlkit.util.hyperparameter as hyp
 from multiworld.envs.mujoco.cameras import sawyer_door_env_camera_v0
-from rlkit.launchers.launcher_util import run_experiment
+from rlkit.launchers.launcher_util import run_experiment_here
 import rlkit.torch.vae.vae_schedules as vae_schedules
 from rlkit.launchers.skewfit_experiments import \
     skewfit_full_experiment
@@ -126,11 +126,10 @@ if __name__ == "__main__":
 
     for exp_id, variant in enumerate(sweeper.iterate_hyperparameters()):
         for _ in range(n_seeds):
-            run_experiment(
+            run_experiment_here(
                 skewfit_full_experiment,
                 exp_prefix=exp_prefix,
                 mode=mode,
                 variant=variant,
                 use_gpu=True,
           )
-
diff --git a/examples/skewfit/sawyer_pickup.py b/examples/skewfit/sawyer_pickup.py
index 4ae1736..33b1530 100644
--- a/examples/skewfit/sawyer_pickup.py
+++ b/examples/skewfit/sawyer_pickup.py
@@ -8,7 +8,7 @@ import rlkit.torch.vae.vae_schedules as vae_schedules
 from multiworld.envs.mujoco.cameras import (
     sawyer_pick_and_place_camera,
 )
-from rlkit.launchers.launcher_util import run_experiment
+from rlkit.launchers.launcher_util import run_experiment_here
 from rlkit.launchers.skewfit_experiments import skewfit_full_experiment
 from rlkit.torch.vae.conv_vae import imsize48_default_architecture
 
@@ -80,7 +80,7 @@ if __name__ == "__main__":
             exploration_goal_sampling_mode='custom_goal_sampler',
             evaluation_goal_sampling_mode='env',
             normalize=False,
-            render=False,
+            render=True,
             exploration_noise=0.0,
             exploration_type='ou',
             training_mode='train',
@@ -153,7 +153,7 @@ if __name__ == "__main__":
 
     for exp_id, variant in enumerate(sweeper.iterate_hyperparameters()):
         for _ in range(n_seeds):
-            run_experiment(
+            run_experiment_here(
                 skewfit_full_experiment,
                 exp_prefix=exp_prefix,
                 mode=mode,
diff --git a/examples/skewfit/sawyer_push.py b/examples/skewfit/sawyer_push.py
index 4f9738b..aee2a85 100644
--- a/examples/skewfit/sawyer_push.py
+++ b/examples/skewfit/sawyer_push.py
@@ -1,6 +1,6 @@
 import rlkit.util.hyperparameter as hyp
 from multiworld.envs.mujoco.cameras import sawyer_init_camera_zoomed_in
-from rlkit.launchers.launcher_util import run_experiment
+from rlkit.launchers.launcher_util import run_experiment_here
 import rlkit.torch.vae.vae_schedules as vae_schedules
 from rlkit.launchers.skewfit_experiments import skewfit_full_experiment
 from rlkit.torch.vae.conv_vae import imsize48_default_architecture
@@ -13,7 +13,8 @@ if __name__ == "__main__":
         online_vae_exploration=False,
         imsize=48,
         init_camera=sawyer_init_camera_zoomed_in,
-        env_id='SawyerPushNIPSEasy-v0',
+        env_id='SawyerPushNIPS-v0',
+        #env_id='SawyerDoorHookEnv-v0',
         skewfit_variant=dict(
             save_video=True,
             custom_goal_sampler='replay_buffer',
@@ -34,7 +35,7 @@ if __name__ == "__main__":
             max_path_length=50,
             algo_kwargs=dict(
                 batch_size=1024,
-                num_epochs=1000,
+                num_epochs=1,
                 num_eval_steps_per_epoch=500,
                 num_expl_steps_per_train_loop=500,
                 num_trains_per_train_loop=1000,
@@ -69,7 +70,7 @@ if __name__ == "__main__":
             exploration_goal_sampling_mode='vae_prior',
             evaluation_goal_sampling_mode='reset_of_env',
             normalize=False,
-            render=False,
+            render=True,
             exploration_noise=0.0,
             exploration_type='ou',
             training_mode='train',
@@ -143,7 +144,7 @@ if __name__ == "__main__":
 
     for exp_id, variant in enumerate(sweeper.iterate_hyperparameters()):
         for _ in range(n_seeds):
-            run_experiment(
+            run_experiment_here(
                 skewfit_full_experiment,
                 exp_prefix=exp_prefix,
                 mode=mode,
@@ -154,7 +155,7 @@ if __name__ == "__main__":
                     terminate=True,
                     zone='us-east1-c',
                     gpu_kwargs=dict(
-                        gpu_model='nvidia-tesla-k80',
+                        gpu_model='nvidia-gtx-1080',
                         num_gpu=1,
                     )
                 )
diff --git a/rlkit/launchers/conf.py b/rlkit/launchers/conf.py
index c567d90..087e252 100644
--- a/rlkit/launchers/conf.py
+++ b/rlkit/launchers/conf.py
@@ -52,7 +52,7 @@ RUN_DOODAD_EXPERIMENT_SCRIPT_PATH = (
 AWS Settings
 """
 # If not set, default will be chosen by doodad
-# AWS_S3_PATH = 's3://bucket/directory
+AWS_S3_PATH = 's3://bucket/directory'
 
 # The docker image is looked up on dockerhub.com.
 DOODAD_DOCKER_IMAGE = "TODO"
diff --git a/rlkit/launchers/launcher_util.py b/rlkit/launchers/launcher_util.py
index f6a393c..33134f1 100644
--- a/rlkit/launchers/launcher_util.py
+++ b/rlkit/launchers/launcher_util.py
@@ -251,7 +251,8 @@ def setup_logger(
         git_infos = get_git_infos(conf.CODE_DIRS_TO_MOUNT)
     first_time = log_dir is None
     if first_time:
-        log_dir = create_log_dir(exp_prefix, **create_log_dir_kwargs)
+        #log_dir = create_log_dir(exp_prefix, **create_log_dir_kwargs)
+        log_dir = create_log_dir(exp_prefix)
 
     if variant is not None:
         logger.log("Variant:")
diff --git a/rlkit/launchers/skewfit_experiments.py b/rlkit/launchers/skewfit_experiments.py
index 3d49379..cbd4996 100644
--- a/rlkit/launchers/skewfit_experiments.py
+++ b/rlkit/launchers/skewfit_experiments.py
@@ -68,6 +68,7 @@ def train_vae_and_update_variant(variant):
         )
         vae, vae_train_data, vae_test_data = train_vae(train_vae_variant,
                                                        return_data=True)
+        print(vae, vae_train_data, vae_test_data )
         if skewfit_variant.get('save_vae_data', False):
             skewfit_variant['vae_train_data'] = vae_train_data
             skewfit_variant['vae_test_data'] = vae_test_data
@@ -138,6 +139,8 @@ def train_vae(variant, return_data=False):
     save_period = variant['save_period']
     dump_skew_debug_plots = variant.get('dump_skew_debug_plots', False)
     for epoch in range(variant['num_epochs']):
+        print('epoch')
+        print(epoch)
         should_save_imgs = (epoch % save_period == 0)
         t.train_epoch(epoch)
         t.test_epoch(
@@ -559,10 +562,11 @@ def skewfit_experiment(variant):
 
     if variant['custom_goal_sampler'] == 'replay_buffer':
         env.custom_goal_sampler = replay_buffer.sample_buffer_goals
-
+    print('running vae_training')
     algorithm.to(ptu.device)
     vae.to(ptu.device)
     algorithm.train()
+    print('done running vae_training')
 
 
 def get_video_save_func(rollout_function, env, policy, variant):
diff --git a/rlkit/torch/skewfit/online_vae_algorithm.py b/rlkit/torch/skewfit/online_vae_algorithm.py
index ce0b484..22948d8 100644
--- a/rlkit/torch/skewfit/online_vae_algorithm.py
+++ b/rlkit/torch/skewfit/online_vae_algorithm.py
@@ -47,6 +47,7 @@ class OnlineVaeAlgorithm(TorchBatchRLAlgorithm):
 
     def _train(self):
         super()._train()
+        print("_train")
         self._cleanup()
 
     def _end_epoch(self, epoch):
@@ -150,6 +151,7 @@ class OnlineVaeAlgorithm(TorchBatchRLAlgorithm):
 
 def _train_vae(vae_trainer, replay_buffer, epoch, batches=50, oracle_data=False):
     batch_sampler = replay_buffer.random_vae_training_data
+    print("_train_vae")
     if oracle_data:
         batch_sampler = None
     vae_trainer.train_epoch(
@@ -162,6 +164,7 @@ def _train_vae(vae_trainer, replay_buffer, epoch, batches=50, oracle_data=False)
 
 def _test_vae(vae_trainer, epoch, replay_buffer, vae_save_period=1, uniform_dataset=None):
     save_imgs = epoch % vae_save_period == 0
+    print("test_vae")
     log_fit_skew_stats = replay_buffer._prioritize_vae_samples and uniform_dataset is not None
     if uniform_dataset is not None:
         replay_buffer.log_loss_under_uniform(uniform_dataset, vae_trainer.batch_size, rl_logger=vae_trainer.vae_logger_stats_for_rl)
